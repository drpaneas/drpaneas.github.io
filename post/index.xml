<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Panos Blog</title>
    <link>http://drpaneas.github.io/post/</link>
    <description>Recent content in Posts on Panos Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Mar 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://drpaneas.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>About Me</title>
      <link>http://drpaneas.github.io/blog/2015/03/01/about-me/</link>
      <pubDate>Sun, 01 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://drpaneas.github.io/blog/2015/03/01/about-me/</guid>
      <description>&lt;p&gt;Nia&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New Dedicated Server</title>
      <link>http://drpaneas.github.io/blog/2015/02/12/new-dedicated-server/</link>
      <pubDate>Thu, 12 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://drpaneas.github.io/blog/2015/02/12/new-dedicated-server/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Καλή Χρονιά&lt;/strong&gt; και &lt;strong&gt;Χρόνια Πολλά&lt;/strong&gt; φίλοι μου! Πρώτο άρθρο για το &lt;strong&gt;2015&lt;/strong&gt;, και σκέφτηκα να ξεκινήσω με κάτι που με χαροποίησε ιδιαίτερα τις προυηγούμενες μέρες. Προφανώς και δεν αναφέρομαι στην άδεια των Χριστουγέννων (&lt;em&gt;ψέμματα&lt;/em&gt;), ούτε στα Χριστουγεννιάτικα δώρα (&lt;em&gt;πάλι ψέμματα&lt;/em&gt;), αλλά στον νέο μου dedicated server, τον οποίο νοικιάζω μόλις 5 Ευρώ τον μήνα!!!&lt;/p&gt;

&lt;p&gt;Επίσης, είμαι χαρούμενος γιατί αυτό είναι το πρώτο Editorial το blog. Σε αυτή την κατηγορία θα γράφω προσωπικές εμπειρίες και απόψεις που δεν έχουν να κάνουν με &lt;em&gt;στεγνά&lt;/em&gt; how-to, αλλά είναι πιο πολύ experienced-based, και προφανώς &lt;em&gt;personally biased&lt;/em&gt;. Ας πάμε όμως στο κυρίως θέμα: τον server!&lt;/p&gt;

&lt;h2 id=&#34;wlan-και-προβλήματα:3c7cf96b03963b8dca2dbe598d6d2f3a&#34;&gt;WLAN και προβλήματα&amp;hellip;&lt;/h2&gt;

&lt;p&gt;Σαν γνήσιος geek, κάθε φορά που ταξιδεύω, προσπαθώ να συνδεθώ στο WLAN του μεταφορικού μέσω του οποίου βρίσκομαι. Δυστυχώς, στην Γερμανία δεν υπάρχει σαν έννοια το &lt;em&gt;Free Wifi&lt;/em&gt; &amp;ndash;ενώ στην Ελλάδα, το εφάρμωσε μια χαρά ο Σαμαράς&amp;ndash; και γενικά το &amp;ldquo;&lt;em&gt;Free&lt;/em&gt;&amp;rdquo; δύσκολα το βρίσκεις (&lt;em&gt;ευλογημένα Starbucks&lt;/em&gt;). Πρόσφατα λοιπόν, ταξιδεύαμε με το λεωφορείο μαζί με την Αλεξάνδρα, πηγαίνοντας προς ένα μικρό χωριό της Βάδης-Βυτερμβέργης κοντά στην Στουτγγάρδη, το Sindelfigen&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3c7cf96b03963b8dca2dbe598d6d2f3a:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3c7cf96b03963b8dca2dbe598d6d2f3a:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. Εκεί μένουν οι συγγενείς μου, και τι καλύτερο από το να περνάς την Πρωτοχρονιά μαζί με τους συγγενείς σου (&lt;em&gt;emotion detected&lt;/em&gt;). Ανοίγω λοιπόν το Macbook και δοκιμάζω να μπω στο Gmail μου. Δυστυχώς όμως, διαπίστωσα πως όταν έστελνα &lt;code&gt;HTTP Request&lt;/code&gt; προς οποιονδήποτε webserver, ο &lt;code&gt;gateway 10.10.10.1&lt;/code&gt; μου πετούσε διάφορα &lt;em&gt;άκυρα&lt;/em&gt; errors. Προσπάθησα λίγη ώρα κάνοντας κάποιο βασικό troubleshooting, όπως:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ping -c 5 google.com&lt;/code&gt; (λειτούργησε μια χαρά)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;traceroute google.com&lt;/code&gt; (λειτούργησε επίσης)&lt;/li&gt;
&lt;li&gt;Αλλαγή των DNS με αυτών της Google (8.8.8.8)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Καρφωτή&lt;/em&gt; IP&lt;/li&gt;
&lt;li&gt;κλπ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Εν τέλη, δοκίμασα να συνδεθώ μέσω &lt;code&gt;VPN&lt;/code&gt;. Για κάποιον λόγο είχα αγοράσει παλαιότερα μία υπηρεσία που μου επιτρέπει να συνδέομαι σε VPN servers ανά τον κόσμο για περιορισμένο χρονικό διάστημα. Εκείνη την στιγμή, συνδέθηκα σε κάποιον server στο Λουξεμβούργο, όπου αν και έκανε λίγη ώρα παραπάνω από ότι περιμένα, τελικά τα κατάφερα να επισκεφτώ μερικά websites.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I had a moment of enlightment&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Εκείνη την στιγμή, αναθεώρησα πόσο σημαντικό είναι για μένα να έχω ένα &lt;em&gt;VPN Server&lt;/em&gt;, καθώς ποτέ δεν ξέρεις πότε θα τον χρειαστείς. Βλέπετε, η αδερφή μου, είναι τόσο έξυπνη που μου &lt;em&gt;ξύλωσε&lt;/em&gt; το Raspberry Pi, το οποίο εκτελούσε χρέη OpenVPN server στην Θεσσαλονίκη, με αποτέλεσμα να έχω μείνει ξεκρέμαστος &amp;hellip;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;η-αφορμή-που-έψαχνα:3c7cf96b03963b8dca2dbe598d6d2f3a&#34;&gt;Η αφορμή που έψαχνα&lt;/h2&gt;

&lt;p&gt;Η λύση φαίνεται να είναι ένας dedicated server. Όχι shared hosting, ούτε VPS. Θέλω έναν reference host στον οποίο να μπορώ να εγκαθιστώ, να ρυθμίζω, και να διαλύω &lt;strong&gt;ό,τι θέλω&lt;/strong&gt;. Η &lt;a href=&#34;http://www.hetzner.de&#34;&gt;Hetzner&lt;/a&gt; είναι μία από τους καλύτερους providers, αλλά αρκετά ακριβή. Οπότε έψαχνα για κάτι περισσότερο &lt;strong&gt;value for money&lt;/strong&gt;. Δεν ήθελα κάτι σταθερό ή κανένα killer rig PC, και τελικά το βρήκα:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;KS-1   Atom™ N2800 640 2c/ 4t  1.86 GHz+   2 GB    500 GB  100 Mbps    € 4.99 χωρίς ΦΠΑ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Η εταιρία λέγεται &lt;a href=&#34;http://www.kimsufi.com/uk/&#34;&gt;Kimsufi&lt;/a&gt; και διαθέτει dedicated server με &lt;strong&gt;1 static IP&lt;/strong&gt; για φοιτητές ή newbies στον χώρο του &lt;strong&gt;IT Administration&lt;/strong&gt;. Αυτό ακριβώς που έψαχνα: έναν server!&lt;/p&gt;

&lt;p&gt;Για όσους ενδιαφέρονται, πρόκειται για ένα σύμπλεγμα από εταιρίες με αρχηγό την OVH. Το πράγμα έχει ως εξής:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ακριβές λύσεις: &lt;a href=&#34;http://www.ovh.de/dedicated_server/&#34;&gt;OVH&lt;/a&gt; &amp;gt;100 Ευρώ τον μήνα&lt;/li&gt;
&lt;li&gt;Μεσαίες λύσεις: &lt;a href=&#34;http://www.soyoustart.com/de/innovation-zone/hyper-v-azure/&#34;&gt;So you can start&lt;/a&gt; &amp;gt;80 Ευρώ τον μήνα&lt;/li&gt;
&lt;li&gt;Φθηνές λύσεις: &lt;a href=&#34;http://www.kimsufi.com/de/&#34;&gt;Kimsufi&lt;/a&gt; &amp;gt;5 Ευρώ τον μήνα&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Δεν πρόκειται να μπω σε λεπτομέρειες για το τι προσφέρει ο καθένας τους. Αν ενδιαφέρεστε, κάντε κλικ και διαβάστε. Αν και είναι στα Γερμανικά, μπορείτε να αλλάξετε &lt;em&gt;region&lt;/em&gt; και γλώσσα (&lt;em&gt;πχ Ιρλανδία ή Αγλλία&lt;/em&gt;).&lt;/p&gt;

&lt;h2 id=&#34;διαρκώς-sold-out:3c7cf96b03963b8dca2dbe598d6d2f3a&#34;&gt;Διαρκώς &amp;ldquo;Sold out&amp;rdquo;!&lt;/h2&gt;

&lt;p&gt;Για αρκετό χρονικό διάστημα επισκεπτόμουν &lt;em&gt;συχνά-πυκνά&lt;/em&gt; το website της &lt;a href=&#34;http://www.kimsufi.com/de/&#34;&gt;Kimsufi&lt;/a&gt; και περιμένα να δω πότε θα είναι διαθέσιμος ο server των 5 Ευρώ. Δεν βιαζόμουν ιδιαίτερα, κι έτσι το πήρα χαλαρά στην αρχή. Randomly, έριχνα καμιά ματιά, αλλά για κακή μου τύχη &lt;em&gt;ποτέ μα ποτέ&lt;/em&gt; δεν ήταν διαθέσιμος για αγορά. Η αλήθεια είναι όμως πως μετά το περιστατικό στο λεωφορείο, βρήκα την αφορμή που έψαχνα και τότε ήταν που αρχίσα να προβληματίζομαι και να χάνω την υπομονή μου.&lt;/p&gt;

&lt;p&gt;Αντί να το αφήσω στην τύχη του, σκέφτηκα να γράψω ένα script που θα κάνει την δουλειά για μένα. Η δουλειά του θα ήταν να επισκέπτεται το website και να βλέπει αν είναι διαθέσιμος ο server, και όταν θα είναι να μου στείλει mail.&lt;/p&gt;

&lt;p&gt;Το πρόβλημα σε όλα αυτά είναι ότι είμαι υπερβολικά τεμπέλης για να το κάνω σωστά. Ένας κανονικός προγραμματιστής θα έγραφε έναν HTML Parser ή ακόμα καλύτερα θα χρησιμοποιούσε μία έτοιμη βιβλιοθήκη της Python. Αλλά στην δική μου περίπτωση, τα πράγματα ήταν διαφορετικά. Ήθελα να γράψω ένα script μέσα σε 5 λεπτά, &lt;em&gt;more or less&lt;/em&gt;. Οπότε, η όλη διαδικασία ήταν τελικά ως εξής:&lt;/p&gt;

&lt;h3 id=&#34;inspect-element:3c7cf96b03963b8dca2dbe598d6d2f3a&#34;&gt;Inspect Element&lt;/h3&gt;

&lt;p&gt;Κάνοντας &amp;ldquo;&lt;em&gt;Δεξί κλικ&lt;/em&gt;&amp;rdquo; στον Google Chrome (&lt;em&gt;αλλά και σε άλλους browsers&lt;/em&gt;), υπάρχει μία επιλογή που λέει &lt;code&gt;Inspect Element&lt;/code&gt;. Παίζοντας λοιπόν τον &lt;em&gt;Sherlock Holmes&lt;/em&gt;, άρχισα να εξερευνώ το HTML template της σελίδα του Kimsufi. Μιας λοιπόν που ο server των 5 ευρώ δεν ήταν διαθέσιμος, η προσοχή μου στράφηκε σ&amp;rsquo;εναν άλλον, πιο ακριβό,που όμως ήταν διαθέσιμος: Με άλλα λόγια, υπήρχε &amp;ldquo;Buy Button&amp;rdquo;!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/images/inspect.jpg&#34; alt=&#34;Buy Button&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Συγκεκριμένα, με ενδιέφερε να δω αυτό ακριβώς:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&amp;quot;https://www.kimsufi.com/en/order/kimsufi.cgi?hard=150sk40&amp;quot; class=&amp;quot;order-button&amp;quot;&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Όπως βλέπετε, οι σελίδες των server προς αγορά είναι &lt;code&gt;hardcoded&lt;/code&gt;. Αυτό σημαίνει ότι το &lt;code&gt;URL&lt;/code&gt; δεν παράγεται &lt;em&gt;dynamically&lt;/em&gt; αλλά είναι &lt;em&gt;static&lt;/em&gt; δηλωμένο στο εκάστωτε &lt;code&gt;Buy Button&lt;/code&gt;. Το αν θα φαίνεται το &lt;code&gt;Buy Button&lt;/code&gt; ή όχι, αυτό είναι δουλειά της Javascipt με λίγο &amp;ldquo;if-else&amp;rdquo;. Μιας λοιπόν που τα links ήταν όλα visible στον κώδικα, βρήκα ότι το link του server μου είναι το εξής:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;https://www.kimsufi.com/en/order/kimsufi.cgi?hard=150sk10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Το πρώτο πράγμα που έκανα είναι να επισκεφτώ την &lt;a href=&#34;https://www.kimsufi.com/en/order/kimsufi.cgi?hard=150sk10&#34;&gt;παραπάνω σελίδα&lt;/a&gt;. Εκεί είδα ότι ο server δεν είναι διαθέσιμος, και συγκεκριμένα παρατήρησα ότι γράφει &lt;strong&gt;Error&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/images/errorpage.jpg&#34; alt=&#34;Kimsufi error page&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Θαυμασια νέα! Οπότε το μόνο που είχα να κάνω είναι να βάλω ένα script να κατεβάζει τον HTML κώδικα αυτής της σελίδας και να ψάχνει να βρει αν υπάρχει το &lt;strong&gt;string&lt;/strong&gt; &lt;code&gt;error&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Αν το βρεί, τότε αυτό θα σημαίνει πως ο server δεν είναι διαθέσιμος.&lt;/li&gt;
&lt;li&gt;Αν δεν υπάρχει, τότε σημαίνει ότι ο server είναι διαθέσιμος για αγορά!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Άρα σε πρώτη φάση έγραψα κάτι τέτοιο:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://www.kimsufi.com/en/order/kimsufi.cgi?hard=150sk10 -O foo.html

if cat foo.html | grep &amp;quot;1  Error&amp;quot;; then echo &amp;quot;Αδερφέ, δεν είναι έτοιμο&amp;quot;; else echo &amp;quot;Αγόρασε ΤΩΡΑ!!!&amp;quot;; fi;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Για να είμαι ειλικρινής, την πρώτη φορά, έβαλα &lt;code&gt;echo&lt;/code&gt; εντολές, ώστε να ξέρω τι συμβαίνει. Αφού βεβαιώθηκα ότι το &lt;code&gt;grepping&lt;/code&gt; λειτουργεί έτσι όπως θα έπρεπε, μετά αντικατέστησα τα &lt;code&gt;echo&lt;/code&gt; με τις κανονικές εντολές.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://www.kimsufi.com/en/order/kimsufi.cgi?hard=150sk10 -O foo.html

if cat foo.html | grep &amp;quot;1  Error&amp;quot;; then echo &amp;quot; /dev/null&amp;quot;; else echo &amp;quot;Dedicated Server available&amp;quot; | mail -s subject drpaneas@gmail.com ; fi;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Τέλος, ανακατεύθυνα και το output από το &lt;code&gt;grep&lt;/code&gt; στο &lt;code&gt;/dev/null&lt;/code&gt; για να μην με πρίζει κάθε φορά που το τρέχει και βρίσκει το error. Μην ξεχνάτε ότι εμένα με ενδιαφέρει μόνο μία συνθήκη: αυτή που αποτυγχάνει να βρει το error, γιατί τότε σημαίνει ότι δεν υπάρχει error, άρα το link θα είναι διαθέσιμο, άρα ο server διαθέσιμος προς αγορά!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://www.kimsufi.com/en/order/kimsufi.cgi?hard=150sk10 -O foo.html

if cat foo.html | grep &amp;quot;1  Error&amp;quot; &amp;gt; /dev/null; then echo &amp;quot; /dev/null&amp;quot;; else echo &amp;quot;Dedicated Server available&amp;quot; | mail -s subject drpaneas@gmail.com ; fi;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Εννοείται ότι αντί να κάτσω να σετάρω το &lt;code&gt;postfix&lt;/code&gt; για να στέλνω mail από το terminal χρησιμοποιώντας το GMail ως mail-server, προτιμήσα να &amp;ldquo;&lt;em&gt;μαρκάρω&lt;/em&gt;&amp;rdquo; τα μηνύματα από το localhost ως &lt;strong&gt;μη spam&lt;/strong&gt;. Οπότε πλέον μπορούσα να στείλω mail απο το terminal και να το λάβω το Gmail Inbox χωρίς να το πετάξει το Filter στα spam.&lt;/p&gt;

&lt;p&gt;Στην συνέχεια ενεργοποιήσα το Smartphone μου να κάνει θόρυβο όταν δέχομαι e-mails, και τελειοποίησα το ήδη πρόχειρο script γράφοντας μία &lt;code&gt;λούπα&lt;/code&gt; που θα επαναλαμβάνει τον παραπάνω έλεγχο άνα λεπτό.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

while :
do
    wget https://www.kimsufi.com/en/order/kimsufi.cgi?hard=150sk10 -O foo.html

    if (cat foo.html | grep &amp;quot;1  Error&amp;quot; &amp;gt; /dev/null)
    then
        echo &amp;quot; /dev/null&amp;quot;
    else
        echo &amp;quot;Dedicated Server available&amp;quot; | mail -s subject drpaneas@gmail.com
    fi;

	rm *.html
	sleep 60
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Προφανώς και το παραπάνω script αποτελεί ότι χειρότερο μπορεί να γράψει ποτέ Linux Programmer, καθώς είναι τελείως ηλίθιο! Για παράδειγμα, αν αποτύχει το SSL connection (βλ. το &lt;code&gt;https&lt;/code&gt; στο link) αυτό σημαίνει ότι το &lt;code&gt;wget&lt;/code&gt; θα κατεβάσει &lt;em&gt;garbage&lt;/em&gt; HTML, στην οποία δεν θα υπάρχει το &lt;code&gt;1  Error&lt;/code&gt; για το οποίο κάνω &lt;code&gt;grep&lt;/code&gt;, και έτσι θα μου στείλει λανθασμένα e-mail λέγοντας μου &lt;code&gt;Dedicated Server available&lt;/code&gt;. Αλλά είπαμε, μην ξεχνάτε, το script αυτό γράφτηκε με γνώμονα 2 πράγματα:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;5 λεπτά&lt;/li&gt;
&lt;li&gt;Ένα γρήγορο hack να κάνει την δουλειά (έστω και πρόχειρα)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Και όντως, μετά από 1 μέρα, καθώς ήμουν στην δουλειά, χτυπάει το κινητό μου! Βλέπω mail από το terminal, και κατευθείαν επισκέπτομαι το link. Μην σας τα πολυλογώ παιδιά, μέσα σε 3 λεπτά έκανα Register και ολοκλήρωσα την αγορά πληρώνοντας μέσω Paypal. Σε 5 λεπτά, 120 servers των 5 Ευρώ είχαν ήδη γίνει sold out!&lt;/p&gt;

&lt;h4 id=&#34;insomnia-και-διαγωνισμός:3c7cf96b03963b8dca2dbe598d6d2f3a&#34;&gt;Insomnia και διαγωνισμός&lt;/h4&gt;

&lt;p&gt;Εδώ και αρκετά χρόνια παίρνω μέρος σε διάφορους διαγωνισμους που γίνονται σε γνωστά Forums, αλλά ποτέ δεν έχω κερδίσει κάτι. Ε, αυτή την φορά &lt;em&gt;&amp;ldquo;έσπασε η γκίνια&amp;rdquo;&lt;/em&gt; και κέρδισα ένα &lt;code&gt;eu&lt;/code&gt; domain από την &lt;a href=&#34;https://www.ipdomain.net/el&#34;&gt;IP Host&lt;/a&gt;, το οποίο ονόμασα &lt;code&gt;pingouinos.eu&lt;/code&gt;. Την κατάλληλη στιγμή λοιπόν ήρθε και το domain, ώστε να μην έχω να θυμάμαι απ&amp;rsquo;έξω την &lt;code&gt;IP Address&lt;/code&gt; ή το &lt;code&gt;hostname&lt;/code&gt;. Κάποια μέρα λοιπόν μέσα στην εβδομάδα έχω σκοπό να κάτσω να δω πως μπορώ να αλλάξω τους &lt;code&gt;name servers&lt;/code&gt; στην &lt;a href=&#34;https://www.ipdomain.net/el&#34;&gt;IP Host&lt;/a&gt; ώστε να &amp;ldquo;&lt;em&gt;βλέπεi&lt;/em&gt;&amp;rdquo; απευθείας τον νέο μου, φθηνό dedicated server :)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Σημείωση&lt;/em&gt;: Να θυμηθώ να ενεργοποιήσω το SSH.&lt;/p&gt;

&lt;h3 id=&#34;what-s-the-catch:3c7cf96b03963b8dca2dbe598d6d2f3a&#34;&gt;What&amp;rsquo;s the catch ?&lt;/h3&gt;

&lt;p&gt;Μετά από 7 περίπου ώρες, η εταιρία επαλήθευσε τα στοιχεία μου και μου έστειλε τα credentials για login. Υπάρχει μία τεράστια λίστα από Linux distro και FreeBSD προς εγκατάσταση (&lt;em&gt;one click install&lt;/em&gt;) καθώς και ένας πολύ απλός Panel για Monitoring.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/images/kimsufipanel.jpg&#34; alt=&#34;Kimsufi Manager Panel&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Για τα 5 Ευρώ, η Kimsufi δεν σου βάζει κάποιο bandwidth limit, αλλά προφανώς αν αρχίσεις να επιβαρύνεις το δίκτυο θα σου πει &amp;ldquo;κανά δύο λογάκια&amp;rdquo;. Δεν παρέχει κανενός είδος support, κάτι που είναι λογικό για την τιμή.&lt;/p&gt;

&lt;h3 id=&#34;είναι-τρελοί-αυτοί-οι-βόρειοι:3c7cf96b03963b8dca2dbe598d6d2f3a&#34;&gt;Είναι τρελοί Αυτοί οι Βόρειοι&lt;/h3&gt;

&lt;p&gt;Ο server μου βρίσκεται σ&amp;rsquo;ένα Datacenter στην Γαλλία, και συγκεκριμένα σε μία περιοχή που λέγεται &amp;ldquo;Nord-pas-de-calais&amp;rdquo;. Μόλις το διάβασα, θυμήθηκα αμέσως την γνωστή Γαλλική κωμωδία &lt;a href=&#34;http://www.imdb.com/title/tt1064932/&#34;&gt;Είναι τρελοί αυτοί οι Βόρειοι&lt;/a&gt;. Αν και δεν είμαι &lt;em&gt;fan&lt;/em&gt; του Γαλλικού κινηματογράφου, αυτή η ταινία έχει πολύ γέλιο. Αν δεν την έχετε δει&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3c7cf96b03963b8dca2dbe598d6d2f3a:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3c7cf96b03963b8dca2dbe598d6d2f3a:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, αξίζει να την δείτε, θα σας φτιάξει την διάθεση και θα περάσετε ένα όμορφο βράδυ.&lt;/p&gt;

&lt;p&gt;Για όσους έχετε δει την ταινία, φανταστείτε να πάρω τηλέφωνω στην &lt;em&gt;τεχνική υποστήριξη&lt;/em&gt; και να αρχίσουν να μου μιλάνε &lt;em&gt;Σετεμί&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/images/setemi.jpg&#34; alt=&#34;Στην χώρα τον Σετεμι&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Σε περίπτωση που περάσουν οι 30 μέρες και ξεχάσετε να ανανεώσετε την συνδρομή σας, τότε γίνεται αυτόματα format. Ω ναι, δεν σας ρωτάνε ξανά και ξανά όπως κάνουν στο GoDaddy. Δεν τους ενδιαφέρει, δεν ασχολούνται! Οπότε, μην ξεχάσετε να ανανεώσετε την συνδρομή σας, διαφορετικά ο server σας θα βγει άμεσα στο σφυρί στην επόμενη κλήρωση, και θα γίνει άμεσα sold out :)&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:3c7cf96b03963b8dca2dbe598d6d2f3a:1&#34;&gt;Εκεί βρίσκεται το εργοστάσιο της Porsche. &lt;a href=&#34;http://el.wikipedia.org/wiki/%CE%96%CE%AF%CE%BD%CF%84%CE%B5%CE%BB%CF%86%CE%B9%CE%B3%CE%BA%CE%B5%CE%BD&#34;&gt;Διαβάστε περισσότερα&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3c7cf96b03963b8dca2dbe598d6d2f3a:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3c7cf96b03963b8dca2dbe598d6d2f3a:2&#34;&gt;Δείτε το &lt;a href=&#34;https://www.youtube.com/watch?v=fY5cWL4SUmw&#34;&gt;trailer&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3c7cf96b03963b8dca2dbe598d6d2f3a:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Automated deployments with Wercker</title>
      <link>http://drpaneas.github.io/blog/2015/01/12/automated-deployments-with-wercker/</link>
      <pubDate>Mon, 12 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://drpaneas.github.io/blog/2015/01/12/automated-deployments-with-wercker/</guid>
      <description>

&lt;h1 id=&#34;automated-deployments-with-wercker:b122a196014951ebab85fff56cc6436b&#34;&gt;Automated deployments with Wercker&lt;/h1&gt;

&lt;p&gt;In this tutorial we will set up a basic Hugo project and then configure a free tool called Wercker to automatically deploy the generated site any time we add an article. We will deploy it to GitHub pages as that is easiest to set up, but you will see that we can use anything. This tutorial takes you through every step of the process, complete with screenshots, and is fairly long.&lt;/p&gt;

&lt;p&gt;The  assumptions made for this tutorial are that you know how to use git for version control, and have a GitHub account. In case you are unfamiliar with these, in their &lt;a href=&#34;https://help.github.com/articles/set-up-git/&#34;&gt;help section&lt;/a&gt; GitHub has an explanation of how to install and use git and you can easily sign up for a free GitHub account as well.&lt;/p&gt;

&lt;h2 id=&#34;creating-a-basic-hugo-site:b122a196014951ebab85fff56cc6436b&#34;&gt;Creating a basic Hugo site&lt;/h2&gt;

&lt;p&gt;There are already &lt;a href=&#34;http://gohugo.io/overview/quickstart/&#34;&gt;pages&lt;/a&gt; dedicated to describing how to set up a Hugo site so we will only go through the most basic steps required to get a site up and running before we dive into the Wercker configuration. All the work for setting up the project is done using the command line, and kept as simple as possible.&lt;/p&gt;

&lt;p&gt;Create the new site using the &lt;code&gt;hugo new site&lt;/code&gt; command, and we move into it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new site hugo-wercker-example
cd hugo-wercker-example
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add the herring-cove theme by cloning it into the theme directory using the following commands.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir themes
cd themes
git clone https://github.com/spf13/herring-cove.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cloning the project like this will conflict with our own version control, so we remove the external git configuration.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf herring-cove/.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s add a quick &lt;strong&gt;about&lt;/strong&gt; page.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new about.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we&amp;rsquo;ll edit contents/about.md to ensure it&amp;rsquo;s no longer a draft and add some text to it. Once completed it&amp;rsquo;s a good idea to do a quick check if everything is working by running&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo server --theme=herring-cove
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If everything is fine, you should be able to see something similar to the image below when you go to localhost:1313 in your browser.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/creating-a-basic-hugo-site.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;setting-up-version-control:b122a196014951ebab85fff56cc6436b&#34;&gt;Setting up version control&lt;/h2&gt;

&lt;p&gt;Adding git to our project is done by running the &lt;code&gt;git init&lt;/code&gt; command from the root directory of the project.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running &lt;code&gt;git status&lt;/code&gt; at this point will show you p entries: the &lt;strong&gt;config.toml&lt;/strong&gt; file, the &lt;strong&gt;themes&lt;/strong&gt; directory, the &lt;strong&gt;contents&lt;/strong&gt; directory, and the &lt;strong&gt;public&lt;/strong&gt; directory. We don&amp;rsquo;t want the &lt;strong&gt;public&lt;/strong&gt; directory version controlled however, as we will use wercker to generate that later on. Therefore, we&amp;rsquo;ll add a gitignore file that will exclude this using the following command.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;/public&amp;quot; &amp;gt;&amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As we currently have no static files outside of the theme directory, Wercker might complain when we try to build the site later on. To prevent this, we simply have to add any file to the static folder. To keep it simple for now we&amp;rsquo;ll add a robots.txt file that will give all search engines full access to the site when it&amp;rsquo;s up.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;User-agent: *\nDisallow:&amp;quot; &amp;gt; static/robots.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After this we can add everything to the repository.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .
git commit -m &amp;quot;Initial commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;adding-the-project-to-github:b122a196014951ebab85fff56cc6436b&#34;&gt;Adding the project to GitHub&lt;/h2&gt;

&lt;p&gt;First we&amp;rsquo;ll create a new repository. You can do this by clicking on the &lt;strong&gt;+&lt;/strong&gt; sign at the top right, or by going to &lt;a href=&#34;https://github.com/new&#34;&gt;https://github.com/new&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We then choose a name for the project (&lt;strong&gt;hugo-wercker-example&lt;/strong&gt;). When clicking on create repository GitHub displays the commands for adding an existing project to the site. The commands shown below are the ones used for this site, if you&amp;rsquo;re following along you will need to use the ones shown by GitHub. Once we&amp;rsquo;ve run those commands the project is in GitHub and we can move on to setting up the Wercker configuration.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote add origin git@github.com:ArjenSchwarz/hugo-wercker-example.git
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/adding-the-project-to-github.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;welcome-to-wercker:b122a196014951ebab85fff56cc6436b&#34;&gt;Welcome to wercker&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s start by setting up an account for Wercker. To do so we&amp;rsquo;ll go to &lt;a href=&#34;http://wercker.com&#34;&gt;http://wercker.com&lt;/a&gt; and click on the &lt;strong&gt;register&lt;/strong&gt; link at the top-right corner.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/welcome-to-wercker.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;register:b122a196014951ebab85fff56cc6436b&#34;&gt;Register&lt;/h2&gt;

&lt;p&gt;To make life easier for ourselves, we will then register using GitHub. If you don&amp;rsquo;t have a GitHub account, or don&amp;rsquo;t want to use it for your account, you can of course register with a username and password as well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/register.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;connect-github-bitbucket:b122a196014951ebab85fff56cc6436b&#34;&gt;Connect GitHub/Bitbucket&lt;/h2&gt;

&lt;p&gt;After you are registered, you will need to link your GitHub and/or Bitbucket account to Wercker. You do this by going to your profile settings, and then &amp;ldquo;Git connections&amp;rdquo; If you registered using GitHub it will most likely look like the below. To connect a missing service, simply click on the connect button which will then send you to either GitHub or Bitbucket where you might need to log in and approve their access to your account.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/connect-github-bitbucket.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;add-your-project:b122a196014951ebab85fff56cc6436b&#34;&gt;Add your project&lt;/h2&gt;

&lt;p&gt;Now that we&amp;rsquo;ve got all the preliminaries out of the way, it&amp;rsquo;s time to set up our application. For this we click on the &lt;strong&gt;+ Add&lt;/strong&gt; button next to Apps, and then we&amp;rsquo;ll choose to use GitHub as our provider.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/add-your-project.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;select-a-repository:b122a196014951ebab85fff56cc6436b&#34;&gt;Select a repository&lt;/h2&gt;

&lt;p&gt;Clicking this will make Wercker show you all the repositories you have on GitHub, but you can easily filter them as well. So we search for our repository, select it, and then click on &amp;ldquo;Use selected repo&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/select-a-repository.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;configure-access:b122a196014951ebab85fff56cc6436b&#34;&gt;Configure access&lt;/h2&gt;

&lt;p&gt;This step can be slightly tricky. As Wercker doesn&amp;rsquo;t access to check out your private projects by default it will ask you what you want to do. When your project is public, as needs to be the case if you wish to use GitHub Pages, the top choice is recommended. When you use this it will simply check out the code in the same way anybody visiting the project on GitHub can do.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/configure-access.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;wercker-yml:b122a196014951ebab85fff56cc6436b&#34;&gt;Wercker.yml&lt;/h2&gt;

&lt;p&gt;Wercker will now attempt to create an initial wercker.yml file for you. Or rather, it will create the code you can copy into it yourself. Because there is nothing special about our project according to Wercker, we will simply get the &lt;code&gt;wercker/default&lt;/code&gt; box. So what we do now is create a wercker.yml file in the root of our project that contains the provided configuration, and after we finish setting up the app we will expand this file to make it actually do something.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/werckeryml.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;public-or-not:b122a196014951ebab85fff56cc6436b&#34;&gt;Public or not&lt;/h2&gt;

&lt;p&gt;This is a personal choice, you can make an app public so that everyone can see more details about it. This doesn&amp;rsquo;t give you any real benefits either way in general, although as part of the tutorial I have of course made this app public so you can see it in action &lt;a href=&#34;https://app.wercker.com/#applications/54b1e45eda3a4af76406ece6&#34;&gt;yourself&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/public-or-not.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;and-we-ve-got-an-app:b122a196014951ebab85fff56cc6436b&#34;&gt;And we&amp;rsquo;ve got an app&lt;/h2&gt;

&lt;p&gt;The application is added now, and Wercker will be offering you the chance to trigger a build. As we haven&amp;rsquo;t pushed up the &lt;strong&gt;wercker.yml&lt;/strong&gt; file however, we will politely decline this option.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/and-we-ve-got-an-app.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;adding-steps:b122a196014951ebab85fff56cc6436b&#34;&gt;Adding steps&lt;/h2&gt;

&lt;p&gt;And now we&amp;rsquo;re going to add the steps themselves. First, we go to the &amp;ldquo;Steps&amp;rdquo; action in the sidebar and then search for hugo. The first result is the &lt;strong&gt;Hugo-Build&lt;/strong&gt; task, which we select.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/adding-steps.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;using-hugo-build:b122a196014951ebab85fff56cc6436b&#34;&gt;Using Hugo-Build&lt;/h2&gt;

&lt;p&gt;Inside the details of this step you will see how to use it. At the top is a summary for the very basic usage, but when scrolling down you go through the README of the step which will usually contain more details about how to use it including a full example of using the step. So we return to our project, and while making it fit our project better we add these details to our wercker.yml file so it looks like this. Wercker also has a &lt;a href=&#34;http://devcenter.wercker.com/articles/werckeryml/validate.html&#34;&gt;page&lt;/a&gt; for validating wercker.yml files, and it&amp;rsquo;s usually a good idea to do so before committing changes.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;box: wercker/default
build:
  steps:
    - arjen/hugo-build:
        version: 0.12
        theme: herring-cove
        flags: --buildDrafts=true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This concludes the first step, so we&amp;rsquo;ll test that it all works as it should by pushing up our wercker.yml file and seeing the magic at work.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add wercker.yml
git commit -m &amp;quot;Add wercker.yml&amp;quot;
git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once completed a nice tick should have appeared in front of your first build, and if you want you can look at the details by clicking on it. However, we&amp;rsquo;re not done yet as we still need to deploy it to GitHub Pages.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/using-hugo-build.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;adding-a-github-pages-step:b122a196014951ebab85fff56cc6436b&#34;&gt;Adding a GitHub Pages step&lt;/h2&gt;

&lt;p&gt;In order to deploy to GitHub Pages we need to add a deploy step. Once again searching through the Steps repository we find that the most popular step is the &lt;strong&gt;lukevevier/gh-pages&lt;/strong&gt; step so we add the configuration for that to our wercker.yml file, which then becomes this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;box: wercker/default
build:
  steps:
    - arjen/hugo-build:
        version: 0.12
        theme: herring-cove
        flags: --buildDrafts=true
deploy:
  steps:
    - lukevivier/gh-pages@0.2.1:
        token: $GIT_TOKEN
        domain: hugo-wercker.ig.nore.me
        basedir: public
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;How does this configuration work? We&amp;rsquo;ve selected a couple of things, first the domain we want to use for the site. Configuring this here will ensure that GitHub Pages is aware of the domain you want to use.&lt;/p&gt;

&lt;p&gt;Secondly we&amp;rsquo;ve configured the basedir to &lt;strong&gt;public&lt;/strong&gt;, this is the directory that will be used as the website on GitHub Pages.&lt;/p&gt;

&lt;p&gt;And lastly, you can see here that this has a &lt;strong&gt;$GIT_TOKEN&lt;/strong&gt; variable. This is used for pushing our changes up to GitHub and we will need to configure this before we can do that. We do this by going to our app&amp;rsquo;s settings and clicking on &lt;strong&gt;Deploy targets&lt;/strong&gt;. Now, we &lt;strong&gt;Add deploy target&lt;/strong&gt; and select &lt;strong&gt;Custom deploy&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/adding-a-github-pages-step.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;configure-the-deploy-step:b122a196014951ebab85fff56cc6436b&#34;&gt;Configure the deploy step&lt;/h2&gt;

&lt;p&gt;Simply fill in the name, and make sure you enable &lt;strong&gt;auto deploy&lt;/strong&gt; from the &lt;strong&gt;master&lt;/strong&gt; branch. Next you add a variable for the &lt;strong&gt;GIT_TOKEN&lt;/strong&gt;, for this you&amp;rsquo;ll need to create an access token in GitHub. How to do that is described on a &lt;a href=&#34;https://help.github.com/articles/creating-an-access-token-for-command-line-use/&#34;&gt;GitHub help page&lt;/a&gt;. With the deploy step configured in Wercker, we can push the updated wercker.yml file to GitHub and it will create the GitHub pages site for us. The example site we used here is accessible under hugo-wercker.ig.nore.me&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://drpaneas.github.io/img/tutorials/configure-the-deploy-step.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;conclusion:b122a196014951ebab85fff56cc6436b&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;From now on, any time you want to put a new post on your blog all you need to do is push your new page to GitHub and the rest will happen automatically. The source code for the example site used here is available on &lt;a href=&#34;https://github.com/ArjenSchwarz/hugo-wercker-example&#34;&gt;GitHub&lt;/a&gt;, as is the &lt;a href=&#34;https://github.com/ArjenSchwarz/wercker-step-hugo-build&#34;&gt;Hugo Build step&lt;/a&gt; itself.&lt;/p&gt;

&lt;p&gt;If you want to see an example of how you can deploy to S3 instead of GitHub pages, take a look at &lt;a href=&#34;http://blog.wercker.com/2013/06/10/Streamlining-Middleman-Deploys-to-s3.html&#34;&gt;Wercker&amp;rsquo;s blogpost&lt;/a&gt; about how to set that up for Middleman.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>